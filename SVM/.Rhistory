library (e1071)
install.packages("e1071")
print(letters)
library(e1071)
install.packages("e1071")
install.packages('e1071', dependencies = TRUE)
install.packages("Rcmdr")
install.packages("e1071", dep=TRUE)
library("e1071", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
model <- svm(Species~., data = lettersTrain, kernal = "radial", gamma = 0.001, cost = 10)
prediction <- predict(model, lettersTest[-5])
confusionMatrix <-table(pred = prediction, true = lettersTest$Species)
agreement <- prediction == lettersTest$Species
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
model <- svm(Species~., data = lettersTrain, kernal = "radial", gamma = 0.001, cost = 10)
prediction <- predict(model, lettersTest[-5])
confusionMatrix <-table(pred = prediction, true = lettersTest$Species)
agreement <- prediction == lettersTest$Species
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
setwd("~/Documents/Py/SVM")
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
model <- svm(Species~., data = lettersTrain, kernal = "radial", gamma = 0.001, cost = 10)
prediction <- predict(model, lettersTest[-5])
confusionMatrix <-table(pred = prediction, true = lettersTest$Species)
agreement <- prediction == lettersTest$Species
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
model <- svm(letter~., data = lettersTrain, kernal = "radial", gamma = 0.001, cost = 10)
prediction <- predict(model, lettersTest[-5])
confusionMatrix <-table(pred = prediction, true = lettersTest$letter)
agreement <- prediction == lettersTest$letter
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
model <- svm(letter~., data = lettersTrain, kernal = "radial", gamma = 0.001, cost = 10)
prediction <- predict(model, lettersTest[-5])
confusionMatrix <-table(pred = prediction, true = lettersTest$letter)
agreement <- prediction == lettersTest$letter
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
model <- svm(letter~., data = lettersTrain, kernal = "radial", gamma = 0.001, cost = 10)
prediction <- predict(model, lettersTest[-5])
confusionMatrix <-table(pred = prediction, true = lettersTest$letter)
agreement <- prediction == lettersTest$letter
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
model <- svm(letter~., data = lettersTrain, kernal = "radial", gamma = 0.001, cost = 10)
prediction <- predict(model, lettersTest[-1])
confusionMatrix <-table(pred = prediction, true = lettersTest$letter)
agreement <- prediction == lettersTest$letter
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
# model <- svm(letter~., data = lettersTrain, kernal = "radial", gamma = 0.001, cost = 10)
#
# prediction <- predict(model, lettersTest[-1])
# confusionMatrix <-table(pred = prediction, true = lettersTest$letter)
#
# agreement <- prediction == lettersTest$letter
# accuracy <- prop.table(table(agreement))
#
# print(confusionMatrix)
# print(accuracy)
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
tuned <- tune.svm(letter~., data = lettersTrain, kernal = "radial", gamma = 0.001, cost = 10)
summary(tuned)
# model <- svm(letter~., data = lettersTrain, kernal = "radial", gamma = 0.001, cost = 10)
#
# prediction <- predict(model, lettersTest[-1])
# confusionMatrix <-table(pred = prediction, true = lettersTest$letter)
#
# agreement <- prediction == lettersTest$letter
# accuracy <- prop.table(table(agreement))
#
# print(confusionMatrix)
# print(accuracy)
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
tuned <- tune.svm(letter~., data = lettersTrain, gamma = 10^(0.1:0.0001), cost = 10^(1:10))
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
model <- svm(letter~., data = lettersTrain, kernal = "radial", gamma = 0.01, cost = 5)
prediction <- predict(model, lettersTest[-1])
confusionMatrix <-table(pred = prediction, true = lettersTest$letter)
agreement <- prediction == lettersTest$letter
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
console.log(T=89.2)
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
model <- svm(letter~., data = lettersTrain, kernal = "radial", gamma = 0.001, cost = 5)
prediction <- predict(model, lettersTest[-1])
confusionMatrix <-table(pred = prediction, true = lettersTest$letter)
agreement <- prediction == lettersTest$letter
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
model <- svm(letter~., data = lettersTrain, kernal = "radial", gamma = 0.01, cost = 10)
prediction <- predict(model, lettersTest[-1])
confusionMatrix <-table(pred = prediction, true = lettersTest$letter)
agreement <- prediction == lettersTest$letter
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
model <- svm(letter~., data = lettersTrain, kernal = "radial", gamma = 0.01, cost = 100)
prediction <- predict(model, lettersTest[-1])
confusionMatrix <-table(pred = prediction, true = lettersTest$letter)
agreement <- prediction == lettersTest$letter
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
model <- svm(letter~., data = lettersTrain, kernal = "radial", gamma = 0.01, cost = 1000)
prediction <- predict(model, lettersTest[-1])
confusionMatrix <-table(pred = prediction, true = lettersTest$letter)
agreement <- prediction == lettersTest$letter
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
model <- svm(letter~., data = lettersTrain, kernal = "radial", gamma = 0.01, cost = 1000, c=3)
prediction <- predict(model, lettersTest[-1])
confusionMatrix <-table(pred = prediction, true = lettersTest$letter)
agreement <- prediction == lettersTest$letter
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
model <- svm(letter~., data = lettersTrain, kernal = "radial", gamma = 0.01, cost = 1000, C = 3)
prediction <- predict(model, lettersTest[-1])
confusionMatrix <-table(pred = prediction, true = lettersTest$letter)
agreement <- prediction == lettersTest$letter
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
model <- svm(letter~., data = lettersTrain, kernal = "radial", gamma = 0.01, cost = 1000, C = 2)
prediction <- predict(model, lettersTest[-1])
confusionMatrix <-table(pred = prediction, true = lettersTest$letter)
agreement <- prediction == lettersTest$letter
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
model <- svm(letter~., data = lettersTrain, kernal = "radial", gamma = 0.01, cost = 1000, C = 1)
prediction <- predict(model, lettersTest[-1])
confusionMatrix <-table(pred = prediction, true = lettersTest$letter)
agreement <- prediction == lettersTest$letter
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
library(e1071)
letters <- read.csv("letters.csv", header=TRUE)
allRows <- 1:nrow(letters)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
lettersTest <- letters[testRows,]
lettersTrain <- letters[-testRows,]
model <- svm(letter~., data = lettersTrain, kernal = "radial", gamma = 0.01, cost = 1000, C = 4)
prediction <- predict(model, lettersTest[-1])
confusionMatrix <-table(pred = prediction, true = lettersTest$letter)
agreement <- prediction == lettersTest$letter
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
library(e1071)
vowel <- read.csv("vowel.csv", header=TRUE)
allRows <- 1:nrow(vowel)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
vowelTest <- vowel[testRows,]
vowelTrain <- vowel[-testRows,]
model <- svm(vowel~., data = vowelTrain, kernal = "radial", gamma = 0.01, cost = 1000, C = 3)
prediction <- predict(model, vowelTest[-1])
confusionMatrix <-table(pred = prediction, true = vowelTest$vowel)
agreement <- prediction == vowelTest$vowel
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
library(e1071)
vowel <- read.csv("vowel.csv", header=TRUE)
allRows <- 1:nrow(vowel)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
vowelTest <- vowel[testRows,]
vowelTrain <- vowel[-testRows,]
model <- svm(vowel~., data = vowelTrain, kernal = "radial", gamma = 0.01, cost = 1000, C = 3)
prediction <- predict(model, vowelTest[-1])
confusionMatrix <-table(pred = prediction, true = vowelTest$vowel)
agreement <- prediction == vowelTest$vowel
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
library(e1071)
vowel <- read.csv("vowel.csv", header=TRUE)
allRows <- 1:nrow(vowel)
testRows <- sample(allRows, trunc(length(allRows) * 0.3))
vowelTest <- vowel[testRows,]
vowelTrain <- vowel[-testRows,]
model <- svm(Class~., data = vowelTrain, kernal = "radial", gamma = 0.01, cost = 1000, C = 3)
prediction <- predict(model, vowelTest[-13])
confusionMatrix <-table(pred = prediction, true = vowelTest$Class)
agreement <- prediction == vowelTest$Class
accuracy <- prop.table(table(agreement))
print(confusionMatrix)
print(accuracy)
